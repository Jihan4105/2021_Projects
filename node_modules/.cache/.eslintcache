[{"D:\\NodejsProject\\todolist\\client\\src\\index.js":"1","D:\\NodejsProject\\todolist\\client\\src\\App.js":"2","D:\\NodejsProject\\todolist\\client\\src\\pages\\Admin.js":"3","D:\\NodejsProject\\todolist\\client\\src\\pages\\Login.js":"4","D:\\NodejsProject\\todolist\\client\\src\\pages\\ScheduleR.js":"5","D:\\NodejsProject\\todolist\\client\\src\\pages\\ScheduleCUD.js":"6","D:\\NodejsProject\\todolist\\client\\src\\components\\MenuBar.js":"7","D:\\NodejsProject\\todolist\\client\\src\\components\\ToDoListCalendarPicker.js":"8","D:\\NodejsProject\\todolist\\client\\src\\components\\ListAndFormCUD.js":"9","D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleFormCUD.js":"10","D:\\NodejsProject\\todolist\\client\\src\\components\\ListTableCUD.js":"11","D:\\NodejsProject\\todolist\\client\\src\\components\\ToDoListTimePicker.js":"12","D:\\NodejsProject\\todolist\\client\\src\\components\\ToDoListDatePicker.js":"13","D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleStatus.js":"14","D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleType.js":"15","D:\\NodejsProject\\todolist\\client\\src\\components\\ListAndFormR.js":"16","D:\\NodejsProject\\todolist\\client\\src\\components\\ListTableR.js":"17","D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleFormR.js":"18","D:\\NodejsProject\\todolist\\client\\src\\components\\SearchPannel.js":"19","D:\\NodejsProject\\todolist\\client\\src\\components\\SearchTypeAndStatus.js":"20","D:\\NodejsProject\\todolist\\client\\src\\components\\SearchDatePicker.js":"21"},{"size":219,"mtime":1627099551303,"results":"22","hashOfConfig":"23"},{"size":918,"mtime":1627690848090,"results":"24","hashOfConfig":"23"},{"size":0,"mtime":1627100388370,"results":"25","hashOfConfig":"23"},{"size":2837,"mtime":1627189568882,"results":"26","hashOfConfig":"23"},{"size":5120,"mtime":1627187656385,"results":"27","hashOfConfig":"23"},{"size":981,"mtime":1627104999915,"results":"28","hashOfConfig":"23"},{"size":1079,"mtime":1627189630286,"results":"29","hashOfConfig":"23"},{"size":900,"mtime":1627102211732,"results":"30","hashOfConfig":"23"},{"size":2182,"mtime":1627123854676,"results":"31","hashOfConfig":"23"},{"size":7776,"mtime":1627127910123,"results":"32","hashOfConfig":"23"},{"size":3205,"mtime":1627697627837,"results":"33","hashOfConfig":"23"},{"size":936,"mtime":1627123834350,"results":"34","hashOfConfig":"23"},{"size":750,"mtime":1627121863344,"results":"35","hashOfConfig":"23"},{"size":1348,"mtime":1627122933921,"results":"36","hashOfConfig":"23"},{"size":1534,"mtime":1627123174527,"results":"37","hashOfConfig":"23"},{"size":1165,"mtime":1627186623971,"results":"38","hashOfConfig":"23"},{"size":2363,"mtime":1627179234589,"results":"39","hashOfConfig":"23"},{"size":2644,"mtime":1627181320067,"results":"40","hashOfConfig":"23"},{"size":1628,"mtime":1627186581349,"results":"41","hashOfConfig":"23"},{"size":3297,"mtime":1627711656348,"results":"42","hashOfConfig":"23"},{"size":847,"mtime":1627182198343,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ybz2mm",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\NodejsProject\\todolist\\client\\src\\index.js",[],["89","90"],"D:\\NodejsProject\\todolist\\client\\src\\App.js",["91"],"D:\\NodejsProject\\todolist\\client\\src\\pages\\Admin.js",[],"D:\\NodejsProject\\todolist\\client\\src\\pages\\Login.js",["92"],"import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Lock from '@material-ui/icons/Lock';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n\r\nexport default function Login(id, password) {\r\n\r\n  const [loginId,setLoginId] = useState('');\r\n  const [loginPassword, setLoginPassword] = useState('');\r\n\r\n  const handlerLogin = () => {\r\n    \r\n    axios.get('http://localhost:3001/todolist/login', {\r\n      params: {\r\n\r\n      }\r\n    })\r\n    .then((response) => {\r\n\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div style={{ margin: \"10px 30px 0px 0px\", display: \"flex\", justifyContent: \"flex-end\"}}>\r\n        <a style={{textDecoration: \"none\"}} href=\"http://localhost:3000/change_password\">Change Password</a>\r\n      </div>\r\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n        <h3 style={{marginTop: \"0px\"}}>To-Do-List Management System</h3>\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\"}}>\r\n        <h1 style={{ marginTop: \"0px\"}}>Login</h1>\r\n      </div>\r\n      <div style={{marginTop: \"40px\", display: \"flex\", justifyContent: \"center\"}}>\r\n        <FormControl varaint=\"standard\">\r\n          <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n            Login Id.\r\n          </InputLabel>\r\n          <Input\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <AccountCircle />\r\n              </InputAdornment>\r\n            }\r\n            value={loginId}\r\n            onChange={(e) => {setLoginId(e.target.value)}}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div style={{marginTop: \"40px\", display: \"flex\", justifyContent: \"center\"}}>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n            Password\r\n          </InputLabel>\r\n          <Input\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Lock />\r\n              </InputAdornment>\r\n            }\r\n            type=\"password\"\r\n            value={loginPassword}\r\n            onChange={(e) => {setLoginPassword(e.target.value)}}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div style={{ marginTop: \"40px\", display: \"flex\", justifyContent: \"center\"}}>\r\n        <Button variant=\"contained\" onClick={handlerLogin}>Login</Button>\r\n      </div>\r\n      <div style={ {marginTop: \"40px\", display: \"flex\", justifyContent: \"center\"}}>\r\n        <p>@The copyright is on Jihan Lee. 2021</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","D:\\NodejsProject\\todolist\\client\\src\\pages\\ScheduleR.js",["93"],"import React, {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchPannel from \"../components/SearchPannel\";\r\nimport ListAndFormR from \"../components/ListAndFormR\";\r\nimport axios from 'axios';\r\n\r\nfunction ScheduleR() {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n    const [serachedRows, setSearchedRows] = useState([]);\r\n\r\n    useEffect (() =>{\r\n        searchList();\r\n    }, [currentPage]);\r\n\r\n    let [fromDate, setFromDate] = useState(new Date('1900-01-01'));\r\n    let [toDate, setToDate] = useState(new Date('2099-12-31'));\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const [valType, setValType] = useState({\r\n        plan: true,\r\n        promise: true,\r\n        duty: true\r\n    });\r\n\r\n    const [valStatus, setValStatus] = useState({\r\n        notyet: true,\r\n        done: true,\r\n        canceled: true\r\n    })\r\n\r\n    const searchList = () => {\r\n\r\n        if(fromDate === null || isNaN(Date.parse(fromDate))) {\r\n            fromDate = new Date('1900-01-01');\r\n        }\r\n        if(toDate === null || isNaN(Date.parse(toDate))) {\r\n            toDate = new Date('2099-12-31');\r\n        }\r\n\r\n        if(isNaN(Date.parse(fromDate)) || isNaN(Date.parse(toDate))) {\r\n            alert(\"잘못된 날짜 형식입니다.\");\r\n            return;\r\n        }\r\n\r\n        if(valType.plan === false && valType.promise === false && valType.duty === false) {\r\n            alert(\"Type은 하나 이상 선택되어야 합니다.\");\r\n            return;\r\n        }\r\n\r\n        if(valStatus.notyet === false && valStatus.done === false && valStatus.canceled === false){\r\n            alert('Status는 하나 이상 선택되어야 합니다.')\r\n            return;\r\n        }\r\n\r\n        const fillZero = (num) => num<10 && num>=0 ? \"0\" + num : num;\r\n\r\n        if(fromDate !== null){\r\n            fromDate = fromDate.getFullYear() + \"-\" +\r\n                        fillZero(fromDate.getMonth() +1 ) + \"-\" +\r\n                        fillZero(fromDate.getDate());\r\n        }\r\n        else{\r\n            fromDate = \"1900-01-01\";\r\n        }\r\n\r\n        if(toDate !== null){\r\n            toDate = toDate.getFullYear() + \"-\" +\r\n                        fillZero(toDate.getMonth() + 1 ) + \"-\" +\r\n                        fillZero(toDate.getDate());\r\n        }\r\n        else{\r\n            toDate = '2099-12-31';\r\n        }\r\n\r\n        let offset =(currentPage - 1 ) * 10;\r\n\r\n        axios.get('http://localhost:3001/todolist/search_all', {\r\n            params: {\r\n                mode: \"total\",\r\n                offset: offset,\r\n                fromDate: fromDate,\r\n                toDate: toDate,\r\n                keyword: keyword,\r\n                valType: valType,\r\n                valStatus: valStatus\r\n            }\r\n        })\r\n        .then((response) => {\r\n\r\n            let pageCount = parseInt(response.data.rows[0].count / 10);\r\n            if((response.data.rows[0].count % 10) > 0) {\r\n                pageCount++;\r\n            }\r\n            setTotalPage(pageCount);\r\n\r\n            axios.get('http://localhost:3001/todolist/search_all', {\r\n                params: {\r\n                    mode: \"page\",\r\n                    offset: offset,\r\n                    fromDate: fromDate,\r\n                    toDate: toDate,\r\n                    keyword: keyword,\r\n                    valType: valType,\r\n                    valStatus: valStatus\r\n                }\r\n            })\r\n            .then((response) => {\r\n                setSearchedRows(response.data.rows);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            setSearchedRows([]);\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} md={4}>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <SearchPannel\r\n                            setSearchedRows = {setSearchedRows}\r\n                            setFromDate = {setFromDate}\r\n                            setToDate = {setToDate}\r\n                            keyword = {keyword}\r\n                            setKeyword = {setKeyword}\r\n                            setValType = {setValType}\r\n                            setValStatus = {setValStatus}\r\n                            searchList = {searchList}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                    <div style={{padding: '0px 20px 0px 20px'}}>\r\n                        <ListAndFormR\r\n                            isListOrForm = \"list\"\r\n                            setCurrentPage = {setCurrentPage}\r\n                            totalPage = {totalPage}\r\n                            setTotalPage = {setTotalPage}\r\n                            searchedRows = {serachedRows}\r\n                            searchList ={searchList}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScheduleR;","D:\\NodejsProject\\todolist\\client\\src\\pages\\ScheduleCUD.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\MenuBar.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ToDoListCalendarPicker.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ListAndFormCUD.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleFormCUD.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ListTableCUD.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ToDoListTimePicker.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ToDoListDatePicker.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleStatus.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleType.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ListAndFormR.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ListTableR.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\ScheduleFormR.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\SearchPannel.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\SearchTypeAndStatus.js",[],"D:\\NodejsProject\\todolist\\client\\src\\components\\SearchDatePicker.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":13},{"ruleId":"98","severity":1,"message":"102","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":11},{"ruleId":"103","severity":1,"message":"104","line":15,"column":8,"nodeType":"105","endLine":15,"endColumn":21,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchList'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [currentPage, searchList]",{"range":"112","text":"113"},[485,498],"[currentPage, searchList]"]