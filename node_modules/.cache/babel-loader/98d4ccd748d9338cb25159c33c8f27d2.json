{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ScheduleType from \"./ScheduleType\";\nimport ScheduleStatus from \"./ScheduleStatus\";\nimport ToDoListDatePicker from './ToDoListDatePicker';\nimport ToDoListTimePicker from './ToDoListTimePicker';\nimport axios from 'axios';\nexport default function ScheduleFormCUD(props) {\n  _s();\n\n  let selectedTime = props.mode === \"create\" ? new Date() : new Date(props.rowdata.date + \" \" + props.rowdata.time);\n  let disabled;\n  let formTitle;\n\n  if (props.mode === \"create\") {\n    disabled = false;\n    formTitle = \"New Schedule\";\n  } else if (props.mode === \"show\") {\n    disabled = true;\n    formTitle = \"View Schedule\";\n  } else if (props.mode === \"update\") {\n    formTitle = \"Edit Schedule\";\n  }\n\n  const [inputs, setInputs] = useState({\n    title: props.mode === \"create\" ? \"\" : props.rowdata.tile,\n    contents: props.mode === \"create\" ? \"\" : props.rowdata.contents,\n    type: props.mode === \"create\" ? \"plan\" : props.rowdata.type,\n    status: props.mode === \"create\" ? \"notyet\" : props.rowdata.status\n  });\n}\n\n_s(ScheduleFormCUD, \"CwTgnGGez9ops6uQ8kx6oNfIPWE=\");\n\n_c = ScheduleFormCUD;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleFormCUD\");","map":{"version":3,"sources":["D:/NodejsProject/todolist/client/src/components/ScheduleFormCUD.js"],"names":["React","useState","TextField","Grid","Button","ScheduleType","ScheduleStatus","ToDoListDatePicker","ToDoListTimePicker","axios","ScheduleFormCUD","props","selectedTime","mode","Date","rowdata","date","time","disabled","formTitle","inputs","setInputs","title","tile","contents","type","status"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE3C,MAAIC,YAAY,GAAID,KAAK,CAACE,IAAN,KAAe,QAAhB,GAA4B,IAAIC,IAAJ,EAA5B,GAAyC,IAAIA,IAAJ,CAASH,KAAK,CAACI,OAAN,CAAcC,IAAd,GAAqB,GAArB,GAA2BL,KAAK,CAACI,OAAN,CAAcE,IAAlD,CAA5D;AACA,MAAIC,QAAJ;AACA,MAAIC,SAAJ;;AAEA,MAAGR,KAAK,CAACE,IAAN,KAAe,QAAlB,EAA4B;AACxBK,IAAAA,QAAQ,GAAG,KAAX;AACAC,IAAAA,SAAS,GAAG,cAAZ;AACH,GAHD,MAIK,IAAGR,KAAK,CAACE,IAAN,KAAe,MAAlB,EAAyB;AAC1BK,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,SAAS,GAAG,eAAZ;AACH,GAHI,MAIA,IAAGR,KAAK,CAACE,IAAN,KAAe,QAAlB,EAA2B;AAC5BM,IAAAA,SAAS,GAAG,eAAZ;AACH;;AAED,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC;AACjCqB,IAAAA,KAAK,EAAGX,KAAK,CAACE,IAAN,KAAe,QAAhB,GAA4B,EAA5B,GAAiCF,KAAK,CAACI,OAAN,CAAcQ,IADrB;AAEjCC,IAAAA,QAAQ,EAAGb,KAAK,CAACE,IAAN,KAAe,QAAhB,GAA4B,EAA5B,GAAiCF,KAAK,CAACI,OAAN,CAAcS,QAFxB;AAGjCC,IAAAA,IAAI,EAAGd,KAAK,CAACE,IAAN,KAAe,QAAhB,GAA6B,MAA7B,GAAsCF,KAAK,CAACI,OAAN,CAAcU,IAHzB;AAIjCC,IAAAA,MAAM,EAAGf,KAAK,CAACE,IAAN,KAAe,QAAhB,GAA4B,QAA5B,GAAuCF,KAAK,CAACI,OAAN,CAAcW;AAJ5B,GAAD,CAApC;AAOH;;GAzBuBhB,e;;KAAAA,e","sourcesContent":["import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ScheduleType from \"./ScheduleType\";\r\nimport ScheduleStatus from \"./ScheduleStatus\";\r\nimport ToDoListDatePicker from './ToDoListDatePicker';\r\nimport ToDoListTimePicker from './ToDoListTimePicker';\r\nimport axios from 'axios';\r\n\r\nexport default function ScheduleFormCUD(props) {\r\n\r\n    let selectedTime = (props.mode === \"create\") ? new Date() : new Date(props.rowdata.date + \" \" + props.rowdata.time);\r\n    let disabled;\r\n    let formTitle;\r\n\r\n    if(props.mode === \"create\") {\r\n        disabled = false;\r\n        formTitle = \"New Schedule\";\r\n    }\r\n    else if(props.mode === \"show\"){\r\n        disabled = true;\r\n        formTitle = \"View Schedule\";\r\n    }\r\n    else if(props.mode === \"update\"){\r\n        formTitle = \"Edit Schedule\";\r\n    }\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: (props.mode === \"create\") ? \"\" : props.rowdata.tile,\r\n        contents: (props.mode === \"create\") ? \"\" : props.rowdata.contents,\r\n        type: (props.mode === \"create\" ) ? \"plan\" : props.rowdata.type,\r\n        status: (props.mode === \"create\") ? \"notyet\" : props.rowdata.status\r\n    });\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}