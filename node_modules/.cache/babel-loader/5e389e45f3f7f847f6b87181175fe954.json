{"ast":null,"code":"var _jsxFileName = \"D:\\\\NodejsProject\\\\todolist\\\\client\\\\src\\\\components\\\\SearchTypeAndStatus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/checkbox';\nimport { FormHelperText } from '@material-ui/core/FormHelperText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchTypeAndStatus({\n  setValType,\n  setValStatus\n}) {\n  _s();\n\n  const [type, setType] = useState({\n    plan: true,\n    promise: true,\n    canceled: true\n  });\n  const [status, setStatus] = useState({\n    notyet: true,\n    done: true,\n    canceled: true\n  });\n\n  const handleChangeType = event => {\n    setType({ ...type,\n      [event.target.name]: event.target.checked\n    });\n    setValType({ ...type,\n      [event.traget.name]: event.target.checked\n    });\n  };\n\n  const handleChangeStatus = event => {\n    setStatus({ ...status,\n      [event.target.name]: event.target.checked\n    });\n    setValStatus({ ...status,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const {\n    plan,\n    promise,\n    duty\n  } = type;\n  const {\n    notyet,\n    done,\n    canceled\n  } = status;\n  const typeError = [plan, promise, duty].filter(v => v).length < 1;\n  const statusError = [notyet, done, canceled].filter(v => v).length < 1;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      error: typeError,\n      sx: {\n        m: 3\n      },\n      component: \"fieldset\",\n      variant: \"starndard\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: plan,\n            onChange: handleChangeType,\n            name: \"plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this),\n          label: \"Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: promise,\n            onChange: handleChangeType,\n            name: \"promise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this),\n          label: \"Promise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: duty,\n            onChange: handleChangeType,\n            name: \"duty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this),\n          label: \"Duty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"Select One or more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      error: statusError,\n      component: \"fieldset\",\n      sx: {\n        m: 3\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: notyet,\n            onChnage: handleChangeStatus,\n            name: \"notyet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this),\n          label: \"Not yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: done,\n            onChnage: handleChangeStatus,\n            name: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this),\n          label: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: canceled,\n            onChnage: handleChangeStatus,\n            name: \"canceled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this),\n          label: \"Canceled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"Select one or more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchTypeAndStatus, \"r5Gv/n1wiQza7C6liOD85+jaN4o=\");\n\n_c = SearchTypeAndStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchTypeAndStatus\");","map":{"version":3,"sources":["D:/NodejsProject/todolist/client/src/components/SearchTypeAndStatus.js"],"names":["React","useState","Box","FormLabel","FormControl","FormGroup","FormControlLabel","Checkbox","FormHelperText","SearchTypeAndStatus","setValType","setValStatus","type","setType","plan","promise","canceled","status","setStatus","notyet","done","handleChangeType","event","target","name","checked","traget","handleChangeStatus","duty","typeError","filter","v","length","statusError","m"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/checkbox';\r\nimport { FormHelperText } from '@material-ui/core/FormHelperText';\r\n\r\nexport default function SearchTypeAndStatus({setValType, setValStatus}) {\r\n  const [type, setType] = useState({\r\n    plan: true,\r\n    promise: true,\r\n    canceled: true,\r\n  });\r\n\r\n  const[status, setStatus] = useState({\r\n    notyet: true,\r\n    done: true,\r\n    canceled: true,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setType ({\r\n      ...type,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n    setValType({\r\n      ...type,\r\n      [event.traget.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    setStatus({\r\n      ...status,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n    setValStatus({\r\n      ...status,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const {plan,promise,duty} = type;\r\n  const {notyet,done,canceled} = status;\r\n\r\n  const typeError = [plan, promise, duty].filter((v) => v).length < 1;\r\n  const statusError = [notyet, done, canceled].filter((v) => v).length < 1;\r\n\r\n  return(\r\n    <Box>\r\n      <FormControl\r\n        required\r\n        error={typeError}\r\n        sx={{ m: 3}}\r\n        component=\"fieldset\"\r\n        variant=\"starndard\"\r\n      >\r\n        <FormLabel component=\"legend\">Type</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={plan} onChange={handleChangeType} name=\"plan\" />\r\n            }\r\n            label=\"Plan\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={promise} onChange={handleChangeType} name=\"promise\" />\r\n            }\r\n            label=\"Promise\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={duty} onChange={handleChangeType} name=\"duty\" />\r\n            }\r\n            label=\"Duty\"\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>Select One or more</FormHelperText>\r\n      </FormControl>\r\n      <FormControl\r\n        required\r\n        error={statusError}\r\n        component=\"fieldset\"\r\n        sx={{ m: 3}}\r\n        variant=\"standard\"\r\n      >\r\n        <FormLabel>Status</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={notyet} onChnage={handleChangeStatus} name=\"notyet\" />\r\n            }\r\n            label=\"Not yet\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={done} onChnage={handleChangeStatus} name=\"done\" />\r\n            }\r\n            label=\"Done\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={canceled} onChnage={handleChangeStatus} name=\"canceled\" />\r\n            }\r\n            label=\"Canceled\"\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>Select one or more</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}